package com.example.webscanner.controller;

import com.example.webscanner.service.ReportGeneratorService;
import com.example.webscanner.service.VulnerabilityScannerService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import jakarta.servlet.http.HttpServletResponse; // Use jakarta imports for Spring Boot 3.x
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.Map;

@RestController
public class WebScannerController {

    @Autowired
    private VulnerabilityScannerService vulnerabilityScannerService;

    @Autowired
    private ReportGeneratorService reportGeneratorService;

    @GetMapping("/scan")
    public Map<String, String> scan(@RequestParam String url) {
        return vulnerabilityScannerService.scanForVulnerabilities(url);
    }

    @GetMapping("/downloadReport")
    public void downloadReport(@RequestParam String url, HttpServletResponse response) {
        // Scan for vulnerabilities
        Map<String, String> vulnerabilities = vulnerabilityScannerService.scanForVulnerabilities(url);
        // Generate the report
        String reportPath = reportGeneratorService.generateReport(vulnerabilities, url);

        // Set response headers
        response.setContentType("application/pdf");
        response.setHeader("Content-Disposition", "attachment; filename=\"Vulnerability_Report.pdf\"");

        try {
            Path path = Path.of(reportPath); // Get the path of the generated report
            Files.copy(path, response.getOutputStream()); // Copy the report to the response output stream
            response.getOutputStream().flush(); // Ensure all data is sent
        } catch (IOException e) {
            e.printStackTrace();
            response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
        }
    }
}
